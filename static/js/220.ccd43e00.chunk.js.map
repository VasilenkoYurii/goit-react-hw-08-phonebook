{"version":3,"file":"static/js/220.ccd43e00.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","components/WeatherApp/WeatherApp.styled.jsx","components/WeatherApp/WeatherApp.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const HomeTitleBox = styled.div`\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  gap: 30px;\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n  }\n`;\n\nexport const HomeTitle = styled.h1`\n  width: 300px;\n  text-align: justify;\n\n  @media screen and (min-width: 768px) {\n    width: 700px;\n  }\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: #214242;\n  border-bottom: 1px solid black;\n\n  transition: all 0.5s ease;\n\n  &:hover {\n    color: #3d8f8f;\n    border-bottom: 1px solid #3d8f8f;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const WeatherName = styled.h1`\n  font-size: 2rem;\n`;\n\nexport const WeatherWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 270px;\n  background-color: rgba(226, 226, 226, 0.2);\n  text-align: center;\n  box-shadow: rgb(33 33 33) 0px 2px 10px 1px;\n  padding: 20px;\n  border-radius: 3px;\n\n  @media screen and (max-width: 768px) {\n    padding: 15px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 450px;\n  }\n`;\n\nexport const CitySearch = styled.input`\n  width: 200px;\n  box-sizing: border-box;\n  border: 2px solid #ccc;\n  outline: none;\n  border-radius: 20px;\n  font-size: 16px;\n  margin-bottom: 10px;\n  background-color: white;\n  background-position: 10px 10px;\n  padding: 12px 20px 12px 20px;\n  transition: width 0.4s ease-in-out;\n  &:focus {\n    width: 60%;\n  }\n`;\n\nexport const CityName = styled.div`\n  margin-top: 10px;\n  font-size: 1.25em;\n`;\n\nexport const DateWrapper = styled.div`\n  font-size: 1.25em;\n  font-weight: 600;\n`;\n\nexport const IconStyled = styled.div`\n  font-size: 4rem;\n  font-weight: 700;\n  color: #1e2432;\n  text-align: center;\n  @media screen and (max-width: 750px) {\n    font-size: 3rem;\n  }\n`;\n\nexport const DegStyled = styled.span`\n  font-size: 3rem;\n  @media screen and (max-width: 750px) {\n    font-size: 2.5rem;\n  }\n`;\n\nexport const WindStyled = styled.div`\n  font-weight: 600;\n`;\n\nexport const ErroreMessage = styled.span`\n  display: block;\n  text-align: center;\n  color: rgb(20, 2, 2);\n  font-size: 30px;\n`;\n","import { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  CityName,\n  CitySearch,\n  WeatherName,\n  WeatherWrapper,\n  DateWrapper,\n  IconStyled,\n  DegStyled,\n  ErroreMessage,\n  WindStyled,\n} from './WeatherApp.styled';\n\nfunction Weather() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({\n    data: {},\n    error: false,\n  });\n\n  const toDate = () => {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n\n    const days = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ];\n\n    const currentDate = new Date();\n    const date = `${days[currentDate.getDay()]}, ${currentDate.getDate()} ${\n      months[currentDate.getMonth()]\n    }`;\n    return date;\n  };\n\n  const search = async event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setQuery('');\n      setWeather({ ...weather });\n      const baseUrl = 'https://api.openweathermap.org/data/2.5/weather';\n      const apiKey = 'f00c38e0279b7bc85480c3fe775d518c';\n\n      await axios\n        .get(baseUrl, {\n          params: {\n            q: query,\n            units: 'metric',\n            appid: apiKey,\n          },\n        })\n        .then(res => {\n          setWeather({ data: res.data, error: false });\n        })\n        .catch(error => {\n          setWeather({ ...weather, data: {}, error: true });\n          setQuery('');\n          console.log(error.message);\n        });\n    }\n  };\n\n  return (\n    <WeatherWrapper>\n      <WeatherName>\n        Weather <span> ðŸŒ¤ </span>\n      </WeatherName>\n      <div>\n        <CitySearch\n          autoFocus\n          type=\"text\"\n          placeholder=\"Search City..\"\n          name=\"query\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n          onKeyPress={search}\n        ></CitySearch>\n      </div>\n\n      {weather.error && (\n        <>\n          <ErroreMessage>\n            <span style={{ fontSize: '26px' }}> Sorry, City not found</span>\n          </ErroreMessage>\n        </>\n      )}\n\n      {weather && weather.data && weather.data.main && (\n        <div>\n          <CityName>\n            <h2>\n              {weather.data.name}, <span>{weather.data.sys.country}</span>\n            </h2>\n          </CityName>\n          <DateWrapper>\n            <span>{toDate()}</span>\n          </DateWrapper>\n          <IconStyled>\n            <img\n              src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\n              alt={weather.data.weather[0].description}\n            />\n            {Math.round(weather.data.main.temp)}\n            <DegStyled> &deg;C </DegStyled>\n          </IconStyled>\n          <WindStyled>\n            <p>{weather.data.weather[0].description.toUpperCase()}</p>\n            <p>Wind Speed: {weather.data.wind.speed}m/s</p>\n          </WindStyled>\n        </div>\n      )}\n    </WeatherWrapper>\n  );\n}\n\nexport default Weather;\n","import { HomeTitle, HomeTitleBox, NavLinkStyled } from './Home.styled';\nimport ParticlesLines from 'components/ParticlesLines/ParticlesLines';\nimport Weather from 'components/WeatherApp/WeatherApp';\nimport { useAuth } from 'hooks';\n\nconst HomePage = () => {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <HomeTitleBox>\n      <ParticlesLines />\n\n      {isLoggedIn ? (\n        <HomeTitle>\n          Greetings, thank you for registering and showing confidence in us, use\n          the contact book with pleasure =)\n        </HomeTitle>\n      ) : (\n        <HomeTitle>\n          Hello, this web application will allow you to store your contacts in\n          your personal account after\n          <NavLinkStyled to=\"/register\"> registration</NavLinkStyled>, and if\n          you are already registered, you can{' '}\n          <NavLinkStyled to=\"/login\"> log in</NavLinkStyled>.\n          <br /> Come and enjoy =)\n        </HomeTitle>\n      )}\n      <Weather />\n    </HomeTitleBox>\n  );\n};\n\nexport default HomePage;\n"],"names":["HomeTitleBox","styled","HomeTitle","NavLinkStyled","NavLink","WeatherName","WeatherWrapper","CitySearch","CityName","DateWrapper","IconStyled","DegStyled","WindStyled","ErroreMessage","useState","query","setQuery","data","error","weather","setWeather","search","event","key","preventDefault","axios","params","q","units","appid","then","res","catch","console","log","message","autoFocus","type","placeholder","name","value","onChange","target","onKeyPress","style","fontSize","main","sys","country","currentDate","Date","getDay","getDate","getMonth","toDate","src","icon","alt","description","Math","round","temp","toUpperCase","wind","speed","isLoggedIn","useAuth","ParticlesLines","to"],"sourceRoot":""}