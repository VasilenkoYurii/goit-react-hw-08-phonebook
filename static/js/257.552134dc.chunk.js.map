{"version":3,"file":"static/js/257.552134dc.chunk.js","mappings":"qQAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,6HAQRE,EAAQF,EAAAA,EAAAA,MAAH,6EAKLG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,4FAOLK,EAASL,EAAAA,EAAAA,OAAH,0R,SCwCnB,I,gBAAA,EAzDA,WACE,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,SAAAC,GACU,SAAzBA,EAAEC,cAAcR,KACZC,EAAQM,EAAEC,cAAcC,OACxBN,EAAUI,EAAEC,cAAcC,MAC/B,EAaD,OACE,SAAC,KAAD,CAAQC,cAAsBR,EAASS,SAZpB,SAACC,EAAD,IACnBC,EAD8C,EAAhBA,aAE9B,IAAMC,EAAU,CACdd,KAAMA,EACNE,OAAQA,GAEVE,GAASW,EAAAA,EAAAA,IAAWD,IACpBb,EAAQ,IACRE,EAAU,GACX,EAGC,UACE,UAACX,EAAD,CAAUwB,aAAa,MAAvB,WACE,UAACrB,EAAD,mBAEE,SAACC,EAAD,CACEqB,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRd,SAAUA,EACVG,MAAOT,QAGX,UAACL,EAAD,qBAEE,SAACC,EAAD,CACEqB,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRd,SAAUA,EACVG,MAAOP,QAIX,SAACJ,EAAD,CAAQmB,KAAK,SAAb,6BAIP,EC3DYI,EAAc5B,EAAAA,EAAAA,MAAH,qJASX6B,EAAc7B,EAAAA,EAAAA,MAAH,4G,UCSxB,EAhBe,WACb,IAAMW,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACgB,EAAD,oCAEE,SAACC,EAAD,CACEL,KAAK,OACLX,SAAU,SAAAC,GACRH,GAASmB,EAAAA,EAAAA,IAAahB,EAAEiB,OAAOf,OAChC,MAIR,EChBYgB,EAAKhC,EAAAA,EAAAA,GAAH,izBCFFiC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,ECAlBjC,EAASL,EAAAA,EAAAA,OAAH,yRAkBNuC,EAAOvC,EAAAA,EAAAA,GAAH,oHAOJwC,EAAgBxC,EAAAA,EAAAA,IAAH,0CAIbyC,EAAUzC,EAAAA,EAAAA,EAAH,0DCIpB,EA5BoB,WAClB,IAAMW,GAAWC,EAAAA,EAAAA,MAOjB,OCfgC,SAACuB,EAAUO,GAC3C,IAAMC,EAAmBD,EAAOE,cAEhC,OAAOT,EACJO,QAAO,SAAAG,GAAO,OAAIA,EAAQtC,KAAKqC,cAAcE,SAASH,EAAxC,IACdI,MAAK,SAACC,EAAGC,GACR,IAAMC,EAAQF,EAAEzC,KAAK4C,cACfC,EAAQH,EAAE1C,KAAK4C,cACrB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAEF,CACR,GACJ,CDDQC,EALUC,EAAAA,EAAAA,IAAYrB,IAEdqB,EAAAA,EAAAA,IAAYC,EAAAA,KAGiBC,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIlD,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC3D,OACE,UAAC8B,EAAD,YACE,UAACC,EAAD,YACE,UAACC,EAAD,WAAUlC,EAAV,QACA,uBAAIE,QAEN,SAAC,EAAD,CACEe,KAAK,SACLkC,QAAS,WACP/C,GAASgD,EAAAA,EAAAA,IAAcF,GACxB,EAJH,sBALSA,EAed,GACF,EEtBD,EARqB,WACnB,OACE,SAACzB,EAAD,WACE,SAAC,EAAD,KAGL,ECPY4B,EAAkB5D,EAAAA,EAAAA,IAAH,+HC4B5B,EArBqB,WACnB,IAAMW,GAAWC,EAAAA,EAAAA,MACX0B,GAAYgB,EAAAA,EAAAA,IAAYjB,GAM9B,OAJAwB,EAAAA,EAAAA,YAAU,WACRlD,GAASmD,EAAAA,EAAAA,MACV,GAAE,CAACnD,KAGF,iCACE,UAACiD,EAAD,YACE,SAAC,EAAD,KACA,SAAC,EAAD,QAGF,yBAAMtB,GAAa,4BACnB,SAAC,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contactsSlice/selectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","helperFunctions/helperFunctions.js","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const MainForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 10px;\n  border-radius: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Input = styled(Field)`\n  margin-left: 40px;\n  font-size: 16px;\n\n  background: #d7d1c9;\n`;\n\nexport const Button = styled.button`\n  width: 300px;\n  height: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: #aa9a8e;\n  color: black;\n\n  transition: all 0.5s ease;\n\n  &:hover {\n    background-color: #988270;\n    color: #262626;\n  }\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contactsSlice/operetions';\nimport { MainForm, Label, Input, Button } from './ContactForm.styled';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNamber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    e.currentTarget.name === 'name'\n      ? setName(e.currentTarget.value)\n      : setNamber(e.currentTarget.value);\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    const userObj = {\n      name: name,\n      number: number,\n    };\n    dispatch(addContact(userObj));\n    setName('');\n    setNamber('');\n  };\n\n  return (\n    <Formik initialValues={(name, number)} onSubmit={handleSubmit}>\n      <MainForm autoComplete=\"off\">\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={onChange}\n            value={name}\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={onChange}\n            value={number}\n          />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </MainForm>\n    </Formik>\n  );\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const SearchLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  padding-bottom: 15px;\n  width: 300px;\n`;\n\nexport const SearchInput = styled.input`\n  font-size: 16px;\n  width: 100%;\n\n  font-size: 16px;\n\n  background: #d7d1c9;\n`;\n","import { useDispatch } from 'react-redux';\nimport { SearchLabel, SearchInput } from './Filter.styled';\nimport { changeFilter } from 'redux/filterSlice/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <SearchLabel>\n      Find contscts by name\n      <SearchInput\n        type=\"text\"\n        onChange={e => {\n          dispatch(changeFilter(e.target.value));\n        }}\n      ></SearchInput>\n    </SearchLabel>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Ol = styled.ol`\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n  font-size: 20px;\n\n  width: 90%;\n\n  padding: 20px;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 15px; /* ширина для вертикального скролла */\n    background-color: #b7a99f;\n    border-radius: 9em;\n  }\n\n  /* ползунок скроллбара */\n  &::-webkit-scrollbar-thumb {\n    background-color: #5d534b8a;\n    border-radius: 9em;\n    box-shadow: inset 1px 1px 10px #f3faf7;\n    transition: 0.5s ease;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background-color: #715b4b;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const getLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: 75px;\n  height: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: #aa9a8e;\n  color: black;\n\n  transition: all 0.5s ease;\n\n  &:hover {\n    background-color: #988270;\n    color: #262626;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  border-bottom: 2px solid #b7a99f;\n`;\n\nexport const NameContainer = styled.div`\n  display: flex;\n`;\n\nexport const NamePrg = styled.p`\n  width: 300px;\n  height: 30px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getVisibleContacts } from 'helperFunctions/helperFunctions';\nimport { getContacts } from 'redux/contactsSlice/selectors';\nimport { getFiltedContacts } from 'redux/filterSlice/filterSlice';\nimport { deleteContact } from 'redux/contactsSlice/operetions';\nimport { Button, Item, NameContainer, NamePrg } from './ContactItem.styled';\n\nconst ContactItem = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  const filter = useSelector(getFiltedContacts);\n  // console.log(contacts);\n\n  return getVisibleContacts(contacts, filter).map(({ id, name, number }) => {\n    return (\n      <Item key={id}>\n        <NameContainer>\n          <NamePrg>{name}:</NamePrg>\n          <p>{number}</p>\n        </NameContainer>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            dispatch(deleteContact(id));\n          }}\n        >\n          Delete\n        </Button>\n      </Item>\n    );\n  });\n};\n\nexport default ContactItem;\n","export const getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts\n    .filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    .sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n};\n","import { Ol } from './ContactsList.styled';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nconst ContactsList = () => {\n  return (\n    <Ol>\n      <ContactItem />\n    </Ol>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const ContactsPageBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n\n  gap: 100px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contactsSlice/operetions';\nimport { useEffect } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport { getLoading } from 'redux/contactsSlice/selectors';\nimport { ContactsPageBox } from './Contacts.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactsPageBox>\n        <ContactForm />\n        <Filter />\n      </ContactsPageBox>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["MainForm","styled","Form","Label","Input","Field","Button","useState","name","setName","number","setNamber","dispatch","useDispatch","onChange","e","currentTarget","value","initialValues","onSubmit","values","resetForm","userObj","addContact","autoComplete","type","pattern","title","required","SearchLabel","SearchInput","changeFilter","target","Ol","getContacts","state","contacts","items","getLoading","isLoading","Item","NameContainer","NamePrg","filter","normalizedFilter","toLowerCase","contact","includes","sort","a","b","nameA","toUpperCase","nameB","getVisibleContacts","useSelector","getFiltedContacts","map","id","onClick","deleteContact","ContactsPageBox","useEffect","fetchContacts"],"sourceRoot":""}